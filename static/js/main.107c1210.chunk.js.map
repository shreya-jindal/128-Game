{"version":3,"sources":["functions/Grid_compare.js","functions/GridOperations.js","functions/GameMoves.js","functions/Features.js","App.js","index.js"],"names":["Grid_compare","a1","a2","length","i","Array","addNewNumber","grid","GridCopy","map","row","element","indexesOfZeros","_","j","push","x","y","spot","Math","floor","random","randomNumber","slideRight","arr","filter","e","fill","concat","combineNumbers","Score","Number","localStorage","getItem","BestScore","undefined","setItem","toString","horizontalMirror","reverse","transpose","RightMove","LeftMove","DownMove","UpMove","newGame","Row","RowKey","num","number","Cell","CellClass","CellText","className","App","useState","Board","setBoard","setScore","setBestScore","Message","setMessage","useEffect","console","log","window","addEventListener","handleKeyDown","removeEventListener","table","ScoreFromDB","BestScoreFromDB","Won","checkWinCondition","Lost","reduce","num1","num2","alert","event","preventDefault","key","class","type","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.107c1210.chunk.js","sourcesContent":["export function Grid_compare(a1, a2) {\r\n    if(a1.length !== a2.length) {\r\n     return false;\r\n    }\r\n    for(var i in a1) {\r\n     // Don't forget to check for arrays in our arrays.\r\n     if(a1[i] instanceof Array && a2[i] instanceof Array) {\r\n      if(!Grid_compare(a1[i], a2[i])) {\r\n       return false;\r\n      }\r\n     }\r\n     else if(a1[i] !== a2[i]) {\r\n      return false;\r\n     }\r\n    }\r\n    return true;\r\n   }","export const addNewNumber= (grid)=>{\r\n\r\n    let GridCopy=grid.map((row)=>{\r\n        return row.map((element)=> element)\r\n      })\r\n  \r\n    let indexesOfZeros=[];\r\n    grid.map((row,i)=>{\r\n      return row.map((_,j)=>{\r\n          if(!grid[i][j])\r\n          return indexesOfZeros.push({\r\n            x:i,\r\n            y:j\r\n          })\r\n      })\r\n  })\r\n\r\n  if(indexesOfZeros.length===0)\r\n  return GridCopy;\r\n\r\n    let spot=indexesOfZeros[Math.floor(Math.random()*indexesOfZeros.length)];\r\n\r\n    \r\n    let randomNumber= (Math.random()>0.5)? 2:4 ;\r\n\r\n    GridCopy[spot.x][spot.y]= randomNumber;\r\n\r\n    // console.log(GridCopy);\r\n    return GridCopy;\r\n  }\r\n\r\nexport  const slideRight=(grid)=>{\r\n\r\n    return grid.map(row=>{\r\n      let arr=row.filter(e=>e);\r\n      let zeros=Array(grid.length-arr.length).fill(0);\r\n      arr=zeros.concat(arr);\r\n      return arr;\r\n    })\r\n  \r\n  }\r\n  \r\nexport  const combineNumbers = grid =>{\r\n\r\n  let Score=Number(localStorage.getItem(\"Score\"))\r\n  let BestScore=Number(localStorage.getItem(\"BestScore\"))\r\n\r\n    for(let j=0;j<grid.length;j++){\r\n      let row=grid[j];\r\n    for(let i=row.length-1;i>0;i--){\r\n      if(row[i]===row[i-1]){\r\n        row[i]*=2;\r\n        row[i-1]=0;\r\n        \r\n        //Updating Score and Best Score in local Storage\r\n        if(Score!==undefined)\r\n          Score += (row[i]);\r\n        BestScore= (Score>BestScore) ? Score:BestScore;\r\n        localStorage.setItem(\"Score\",Score.toString());\r\n        localStorage.setItem(\"BestScore\",BestScore.toString());\r\n        \r\n      }\r\n    }\r\n  }\r\n  return grid;\r\n  }\r\n  \r\nexport const horizontalMirror = grid =>{\r\n    let GridCopy=grid.map((row)=>{\r\n      return row.map((element)=> element)\r\n    })\r\n\r\n    let MirroredGrid=GridCopy.map(row=>{\r\n      return row.reverse()\r\n    })\r\n\r\n    return MirroredGrid;\r\n\r\n  }\r\n\r\nexport const transpose = grid => grid[0].map((x,i) => grid.map(x => x[i]))\r\n\r\n","import { Grid_compare } from \"./Grid_compare\";\r\nimport { addNewNumber, slideRight, combineNumbers, horizontalMirror, transpose } from \"./GridOperations\";\r\n\r\n\r\n  export function RightMove(grid){\r\n  \r\n    let GridCopy=grid.map((row)=>{\r\n      return row.map((element)=> element)\r\n    })\r\n  \r\n    GridCopy=slideRight(GridCopy)\r\n    GridCopy=combineNumbers(GridCopy);\r\n    GridCopy=slideRight(GridCopy)\r\n    \r\n    if(Grid_compare(GridCopy,grid))\r\n      return GridCopy;\r\n\r\n    GridCopy= addNewNumber (GridCopy);\r\n    return GridCopy;\r\n  \r\n  }\r\n\r\n  export function LeftMove(grid){\r\n  \r\n    let GridCopy=grid.map((row)=>{\r\n      return row.map((element)=> element)\r\n    })\r\n  \r\n    GridCopy=horizontalMirror(GridCopy);\r\n    GridCopy=slideRight(GridCopy);\r\n    GridCopy=combineNumbers(GridCopy);\r\n    GridCopy=slideRight(GridCopy) ; \r\n    GridCopy=horizontalMirror(GridCopy);\r\n\r\n    if(Grid_compare(GridCopy,grid))\r\n    return GridCopy;\r\n\r\n    GridCopy= addNewNumber (GridCopy);\r\n    return GridCopy;\r\n  }\r\n\r\n  export function DownMove(grid){\r\n  \r\n    let GridCopy=grid.map((row)=>{\r\n      return row.map((element)=> element)\r\n    })\r\n  \r\n    GridCopy= transpose (GridCopy);\r\n    GridCopy= slideRight (GridCopy);\r\n    GridCopy= combineNumbers (GridCopy);\r\n    GridCopy= slideRight (GridCopy);\r\n    GridCopy= transpose (GridCopy);\r\n\r\n    if(Grid_compare(GridCopy,grid))\r\n      return GridCopy;\r\n\r\n    GridCopy= addNewNumber (GridCopy);\r\n    return GridCopy;\r\n  }\r\n\r\n  export function UpMove(grid){\r\n  \r\n    let GridCopy=grid.map((row)=>{\r\n      return row.map((element)=> element)\r\n    })\r\n  \r\n    GridCopy= transpose (GridCopy);\r\n    GridCopy= horizontalMirror (GridCopy);\r\n    GridCopy= slideRight (GridCopy);\r\n    GridCopy= combineNumbers (GridCopy);\r\n    GridCopy= slideRight (GridCopy) ; \r\n    GridCopy= horizontalMirror (GridCopy);\r\n    GridCopy= transpose (GridCopy);\r\n\r\n    if(Grid_compare(GridCopy,grid))\r\n      return GridCopy;\r\n\r\n    GridCopy= addNewNumber (GridCopy);\r\n      return GridCopy;\r\n  }\r\n\r\n ","import { addNewNumber } from \"./GridOperations\";\r\nimport { RightMove,LeftMove, DownMove, UpMove } from './GameMoves';\r\nimport { Grid_compare } from \"./Grid_compare\";\r\n\r\nexport function newGame(){\r\n\r\n    let grid= [ \r\n    [0,0,0,0],\r\n    [0,0,0,0],\r\n    [0,0,0,0],\r\n    [0,0,0,0] \r\n  ]\r\n\r\n    //adding 2 numbers at random place\r\n    grid= addNewNumber(grid);\r\n    grid= addNewNumber(grid);\r\n\r\n    //reseting Score to 0\r\n    localStorage.setItem(\"Score\",\"0\");\r\n\r\n    return grid;\r\n  }\r\n\r\n\r\n  export const checkWinCondition= grid =>{\r\n\r\n    //if any number===128 =>WON\r\n    for(let i=0;i<grid.length;i++){\r\n      for(let j=0;j<grid[0].length;j++){\r\n        if(grid[i][j]===128){\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  export const checkLostCondition= grid =>{\r\n\r\n    //if board is empty i.e. sum of all numbers==0 => NOT Lost\r\n    let sumOfNumbers=grid.map((row)=>{\r\n      return row.reduce((a1,a2)=>a1+a2);\r\n    }).reduce((num1,num2)=>num1+num2);\r\n\r\n    if(sumOfNumbers===0){\r\n      return false;\r\n    }\r\n\r\n    //if original grid is different from grid after any move =>NOT Lost , otherwise Lost\r\n    if( !Grid_compare(grid,RightMove(grid)) ){\r\n      return false;\r\n    }\r\n    if( !Grid_compare(grid,LeftMove(grid)) ){\r\n      console.log(2);\r\n      return false;\r\n    }\r\n    if( !Grid_compare(grid,UpMove(grid)) ){\r\n      console.log(3);\r\n      return false;\r\n    }\r\n    if( !Grid_compare(grid,DownMove(grid)) ){\r\n      console.log(4);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }","import { useEffect, useState } from 'react';\nimport './App.css';\nimport { RightMove, LeftMove, DownMove, UpMove } from './functions/GameMoves';\nimport { checkWinCondition, checkLostCondition } from './functions/Features';\n// import { handleKeyDown } from './functions/GameMoves'\nimport { newGame } from './functions/Features';\n\n\nconst App = () => {\n\n  let [Board, setBoard] = useState(\n    [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0]\n    ]\n    // [[2, 16, 8, 16],\n    // [8, 2, 64, 32],\n    // [2, 32, 16, 2],\n    // [8, 32, 32, 8]]\n  )\n\n  let [Score, setScore] = useState(0);\n\n  let [BestScore, setBestScore] = useState(0);\n\n  let [Message, setMessage] = useState(undefined);\n\n  useEffect(() => {\n    setBoard(newGame());\n    localStorage.setItem(\"Score\", \"0\");\n    localStorage.setItem(\"BestScore\", \"0\");\n    console.log(\"Reloaded!\");\n  }, [])\n\n\n  useEffect(() => {\n    if (Message === undefined)\n      window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n\n  useEffect(() => {\n    console.table(Board);\n    let ScoreFromDB = Number(localStorage.getItem(\"Score\"))\n    let BestScoreFromDB = Number(localStorage.getItem(\"BestScore\"))\n    if (ScoreFromDB !== undefined) {\n      setScore(ScoreFromDB);\n      setBestScore(BestScoreFromDB);\n    }\n\n    //on change in board, check for:- if won or lost condition\n    let Won = checkWinCondition(Board);\n    let Lost = checkLostCondition(Board);\n    if (Won) {\n      setMessage(\"Congrations!! \\n You Win!!\")\n    }\n    if (Lost) {\n      setMessage(\"Game Over!\")\n    }\n\n  }, [Board])\n\n  useEffect(() => {\n\n    if (Message)\n      return alert(Message);\n    console.log(Message);\n\n  }, [Message])\n\n\n  const handleKeyDown = (event) => {\n    event.preventDefault();\n\n    switch (event.key) {\n      case \"ArrowUp\": setBoard(UpMove(Board));\n        break;\n      case \"ArrowDown\": setBoard(DownMove(Board));\n        break;\n      case \"ArrowRight\": setBoard(RightMove(Board));\n        break;\n      case \"ArrowLeft\": setBoard(LeftMove(Board));\n        break;\n    }\n  }\n\n  return (\n    <>\n\n    <div class=\"Title\">\n      <div className=\"cell\"><div className=\"number\">1</div></div>\n      <div className=\"cell color-2\"><div className=\"number\">2</div></div>\n      <div className=\"cell color-8\"><div className=\"number\">8</div></div>\n      <div className=\"Game\"><div className=\"number\">GAME</div></div>\n      \n    </div>\n<div class=\"ScoresContainer\">\n      <div>\n        <div>Score :</div>\n        <div>{`${Score}`}</div>\n      </div>\n\n      <div>\n        <div>Best Score:</div>\n        <div>{`${BestScore}`}</div>\n        \n      </div>\n      <button type=\"button\" class=\"btn btn-danger\" onClick={() => { setMessage(undefined); setBoard(newGame); }}> Restart </button>\n      </div>\n\n      <table>\n        <tbody>\n          {\n            Board.map((row, i) => <Row key={i} RowKey={row}></Row>)\n          }\n        </tbody>\n      </table>\n      \n    <div class=\"instruction\">Join and get to the 128 tile!</div>\n      \n      \n    </>\n  );\n}\n\n\n\n\n\n\n\n\n\nconst Row = ({ RowKey }) => {\n  return (\n    <tr>\n      {\n        RowKey.map((num, i) =>\n          <Cell key={i} number={num} />\n        )\n      }\n    </tr>\n  )\n}\n\nconst Cell = ({ number }) => {\n  let CellClass = \"cell\";\n  let CellText = (number) ? `${number}` : \" \";\n  if (number) {\n    CellClass += ` color-${number}`;\n  }\n\n  return (\n    <>\n      <td>\n        <div className={CellClass}>\n          <div className=\"number\">{CellText}</div>\n        </div>\n      </td>\n\n    </>\n  )\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}